/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package boundary.graphics.personalizedComponents;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Point;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JLabel;
import model.entities.Case;

/**
 *
 * @author louistenailleau
 */
public class GridModel extends javax.swing.JPanel {
    
    private Map<Integer,CasePanel> model;

    /**
     * Creates new form GridModel
     */
    public GridModel() {
        initComponents();
        manualInit();
    }

    public Map<Integer, CasePanel> getModel() {
        return model;
    }
    
    public CasePanel getCase(int position) {
        return model.get(position);
    }
    
    public void setCase(int position, CasePanel myCase) {
        model.put(position, myCase);
    }
    
    private void manualInit(){
        model = new HashMap();
        for(int i = 0; i < 30; i++) {
            CasePanel myCase = new CasePanel();
            myCase.setBackground(new Color((int) (i*8.5), 255, 255));
            this.model.put(i, myCase);
            gridPanel.add(myCase);   
        }
        movePirate1(0);
        movePirate2(0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        piratePawn1 = new boundary.graphics.personalizedComponents.PiratePawn();
        piratePawn2 = new boundary.graphics.personalizedComponents.PiratePawn();
        gridPanel = new javax.swing.JPanel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new javax.swing.OverlayLayout(this));

        javax.swing.GroupLayout piratePawn1Layout = new javax.swing.GroupLayout(piratePawn1);
        piratePawn1.setLayout(piratePawn1Layout);
        piratePawn1Layout.setHorizontalGroup(
            piratePawn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        piratePawn1Layout.setVerticalGroup(
            piratePawn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        add(piratePawn1);

        javax.swing.GroupLayout piratePawn2Layout = new javax.swing.GroupLayout(piratePawn2);
        piratePawn2.setLayout(piratePawn2Layout);
        piratePawn2Layout.setHorizontalGroup(
            piratePawn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        piratePawn2Layout.setVerticalGroup(
            piratePawn2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        add(piratePawn2);

        gridPanel.setLayout(new java.awt.GridLayout(6, 5));
        add(gridPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
       Point location = evt.getPoint();
       Component casePanel = gridPanel.getComponentAt(location);
       location = casePanel.getLocation();
       piratePawn1.moveHorizontally(location.x + casePanel.getSize().width/2);
       piratePawn1.moveVertically(location.y + casePanel.getSize().height/2);
    }//GEN-LAST:event_formMousePressed

    public void movePirate1(int box){
        System.out.println("movePirate1() " + box);
        Component casePanel = gridPanel.getComponent(box);
        Point location = casePanel.getLocation();
        System.out.println("casePanel =  " + location.toString());
        piratePawn1.moveHorizontally(location.x + casePanel.getSize().width/2);
        piratePawn1.moveVertically(location.y + casePanel.getSize().height/2);
    }
    
    public void movePirate2(int box){
        System.out.println("movePirate2() " + box);
        Component casePanel = gridPanel.getComponent(box);
        Point location = casePanel.getLocation();
        System.out.println("casePanel =  " + location.toString());
        piratePawn2.moveHorizontally(location.x + casePanel.getSize().width/2);
        piratePawn2.moveVertically(location.y + casePanel.getSize().height/2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gridPanel;
    private boundary.graphics.personalizedComponents.PiratePawn piratePawn1;
    private boundary.graphics.personalizedComponents.PiratePawn piratePawn2;
    // End of variables declaration//GEN-END:variables
}
